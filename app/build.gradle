apply plugin: 'com.android.application'
apply plugin: 'kotlin-android'
apply plugin: 'kotlin-android-extensions'

android {
    compileSdkVersion 29

    defaultConfig {
        applicationId "com.cy.cblog"
        minSdkVersion 21
        targetSdkVersion 29
        versionCode 1
        versionName "1.0"

        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
    }

    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
    }
    buildFeatures{
//        dataBinding = true//开启数据绑定
        viewBinding = true//开启视图绑定
    }

    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }

    kotlinOptions{
        jvmTarget = "1.8"
    }

}

dependencies {
    implementation fileTree(dir: "libs", include: ["*.jar"])
    implementation "org.jetbrains.kotlin:kotlin-stdlib:$kotlin_version"
    implementation 'androidx.core:core-ktx:1.3.0'
    implementation 'androidx.appcompat:appcompat:1.1.0'
    implementation 'androidx.annotation:annotation:1.1.0'
    testImplementation 'junit:junit:4.12'
    androidTestImplementation 'androidx.test.ext:junit:1.1.1'
    androidTestImplementation 'androidx.test.espresso:espresso-core:3.2.0'

    implementation rootProject.ext.lifecycle

    implementation rootProject.ext.material

    implementation rootProject.ext.constraintlayout

    implementation rootProject.ext.navigation
    implementation rootProject.ext.navigationUi

    implementation rootProject.ext.navigationKt
    implementation rootProject.ext.navigationUiKt

    implementation rootProject.ext.preference
}

/**
 * getAllProjects 使用示例
 */
this.getProjects()
def getProjects(){
    println '<=====================>'
    println ' Root Project Start '
    println '<=====================>'
    //1、getAllprojects 方法返回一个包含根 project 与其子 project 的 set 集合
    //eachWithIndex 方法用于遍历集合、数组等可迭代容器，
    //并同时返回下标，不同于 each 方法仅返回 project
    this.getAllprojects().eachWithIndex{  entry, int index ->
        //2、下标为0，表明当前遍历的是 rootProject
        if(index == 0){
            println "Root Project is $entry"
        }else{
            println "Child Project is $entry"
        }
    }
}

/**
 * getAllsubproject示例
 */
this.getSubProjects()
def getSubProjects(){
    println '<=====================>'
    println ' Sub Project Start '
    println '<=====================>'
    //
    this.getSubprojects().each {Project project ->
        println "child Project is $project"
    }
}
